class Registry{static register(t){this.registry[t.playerId]=t}static get registry(){return this._registry||(this._registry={}),this._registry}static getNextTrack(t,s,r){let i=null;return Object.values(this.registry).forEach((e=>{if(e.playlist===t){if(e.position===s){const{tracks:t}=e;t[r+1]&&(e.activeTrackPosition=r+1,i=e)}i||e.position!==s+1||(i=e)}})),i}static getPreviousTrack(t,s){let r=null;return Object.values(this.registry).forEach((i=>{i.playlist===t&&i.position===s-1&&(r=i)})),r}static resetStatus(){Object.values(this.registry).forEach((t=>{t.status=null}))}static getAudioPlayer(t){return this.registry[t]}}export{Registry};